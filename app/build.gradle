/*
 * Copyright 2018, Chiswick Forest
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    defaultConfig {
        applicationId "com.pij.zworkout"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode calculateVersionCode(project.version)
        versionName project.version
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath false
            }
        }

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
    }

    // Always show the result of non-passed unit tests.
    testOptions {
        unitTests.all {
            testLogging {
                events 'skipped', 'failed', 'standardOut', 'standardError'
            }
            animationsDisabled = true
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        baseline file("lint-baseline.xml")
    }

}

/*
 Dependency versions are defined in the top level build.gradle file. This helps keeping track of
 all versions in a single place. This improves readability and helps managing project complexity.
 */
dependencies {
    implementation project(path: ':service-api')
    implementation project(path: ':services')
    implementation(project(path: ':persistence-api')) {
        exclude group: 'xpp3', module: 'xpp3'
    }
    implementation(project(path: ':persistence')) {
        exclude group: 'xpp3', module: 'xpp3'
    }
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$androidKtxVersion"
    implementation "com.github.pijpijpij:Horrocks:$horrockVersion"
    implementation "org.bitbucket.pijpijpij.android-utils:android-utils:$utilsVersion"

    // App's dependencies, including test
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"
    implementation "com.android.support:design:$supportLibraryVersion"
//    implementation "com.android.support:cardview-v7:$supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibraryVersion"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxJava2Version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "com.marcinmoskala.activitystarter:activitystarter:$activityStarterVersion"
    kapt "com.marcinmoskala.activitystarter:activitystarter-compiler:$activityStarterVersion"

    // Dagger dependencies
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    // Dependencies for local unit tests
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
//    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"

    // Android Testing Support Library's runner and rules
    androidTestImplementation "com.android.support.test:runner:$runnerVersion"
    androidTestImplementation "com.android.support.test:rules:$rulesVersion"

    // androidTestImplementation "android.arch.persistence.room:testing:$roomVersion"

    // Dependencies for Android unit tests
    androidTestImplementation "junit:junit:$junitVersion"
    androidTestImplementation "org.mockito:mockito-android:$mockitoVersion"
    androidTestImplementation "com.google.dexmaker:dexmaker:$dexmakerVersion"

    // Espresso UI Testing
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "com.android.support.test.espresso.idling:idling-concurrent:$espressoVersion"

    // Resolve conflicts between main and test APK:
    androidTestImplementation "com.android.support:support-annotations:$supportLibraryVersion"
    androidTestImplementation "com.android.support:recyclerview-v7:$supportLibraryVersion"
    androidTestImplementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    androidTestImplementation "com.android.support:design:$supportLibraryVersion"
    androidTestImplementation "com.google.code.findbugs:jsr305:3.0.2"

}
